"use strict"


// <!-------------------------------------------- Task 1 Start -------------------------------------------->
// Визначити функцію зворотного виклику під назвою "iter". Функція приймає один параметр під назвою «item». Усередині функції має бути оператор console.log, який виводить значення параметра «item» на консоль. Використовуючи forEach() та функцію iter, вивести в консоль значення кожного кольору.

const colors = ['blue', 'green', 'white'];
colors.forEach(iter)
function iter(item) {
    console.log(item)
}

// <!-------------------------------------------- Task 1 End -------------------------------------------->



// <!-------------------------------------------- Task 2 Start -------------------------------------------->
// Визначити функцію зворотного виклику під назвою "iterate", яка приймає два параметри: "item" та "index". Функція повинна видавати повідомлення на консоль за допомогою шаблонних літералів. Повідомлення має містити значення «item» і значення «index» - ${item} has index ${index}. Використовуючи forEach() та функцію iterate, вивести в консоль значення кожного кольору
// Перепишіть функцію iterate, використовуючи масив colors, таким чином, щоб на консоль видавалось повідомлення 'The last iteration!', коли функція виконує останню ітерацію для елементів colors.
// colors.forEach(iterate)
// function iterate(item, index) {
//     console.log(`«item» - ${item} has index ${index}`)
// }

colors.forEach(iterateLast)
function iterateLast(item, index, arr) {

    console.log(`«item» - ${item} has index ${index}`);
    item === arr.at(-1) ? console.log(`${item}: The last iteration!`) : '0';
}
// <!-------------------------------------------- Task 2 End -------------------------------------------->



// <!-------------------------------------------- Task 3 Start -------------------------------------------->
// Визначити функцію зворотного виклику під назвою "iterate", яка приймає параметр під назвою "letter". Усередині функції має бути оператор console.log, який перевіряє, чи значення «this» дорівнює об'єкту «window». Коли функція викликається, вона повинна реєструвати «true» на консолі, якщо значення «this» дорівнює об'єкту «window».
const letters = ['a', 'b', 'c'];

function iterateLetters() {
    console.log(this === undefined ?? false)
    //Делаем проверку на undefined так как установлен строгий режим и this === undefined
}

letters.forEach(iterateLetters)


// <!-------------------------------------------- Task 3 End -------------------------------------------->



// <!-------------------------------------------- Task 4 Start -------------------------------------------->
// Встановити, чи всі числа масиву парні методом forEach()
const Numbers = [22, 3, 4, 10];

let even = true;

function isEven(number) {
    return number % 2 === 0;
}


Numbers.forEach((item) => {
    if (!isEven(item)){
        even = false;
    }
})

even
    ? console.log(`All numbers have even value`)
    : console.log(`One or more numbers have odd value`)



// <!-------------------------------------------- Task 4 End -------------------------------------------->
// Встановити, чи всі числа масиву парні методом every()

let AllEven = Numbers.every((elem) => {
    return elem % 2 === 0
} )

console.log(AllEven)

// <!-------------------------------------------- Task 5 Start -------------------------------------------->

// <!-------------------------------------------- Task 5 End -------------------------------------------->

// Використовуючи метод findIndex, знайти індекс першого елемента в масиві, який задовольняє умову fruit === "blueberries".
const fruits = ["apple", "banana", "cantaloupe", "blueberries", "grapefruit"];

console.log(fruits.findIndex((fruit) => {
    return fruit === "blueberries"
}));

// <!-------------------------------------------- Task 6 Start -------------------------------------------->

// <!-------------------------------------------- Task 6 End -------------------------------------------->



// <!-------------------------------------------- Task 7 Start -------------------------------------------->
// Використовуючи метод find, знайти перший елемент у масиві arr, який задовольняє умову елемент > 10.
const arr = [7, 33, 47, 99, 2, 103, 79];

console.log(arr.find((el) => {
    return el > 10
}));

console.log('')


// <!-------------------------------------------- Task 7 End -------------------------------------------->



// <!-------------------------------------------- Task 8 Start -------------------------------------------->
// Використовуючи метод some, перевірте, чи існує принаймні один елемент у масиві array, що є парним.
const array = [1, 2, 3, 4, 5];

console.log(array.some((el) => {
    return el % 2 === 0;
}));

// <!-------------------------------------------- Task 8 End -------------------------------------------->


// <!-------------------------------------------- Task 8 Start -------------------------------------------->
// Використовуючи метод sort, відсортуйте елементи масиву "numbers" у порядку зростання.
const numbers = [1, 30, 4, 21, 100000];
console.log(numbers.sort(() => {}));
// <!-------------------------------------------- Task 8 End -------------------------------------------->